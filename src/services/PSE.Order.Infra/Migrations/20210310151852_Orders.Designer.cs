// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSE.Order.Infra.Data;

namespace PSE.Order.Infra.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20210310151852_Orders")]
    partial class Orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSE.Order.Domain.Orders.OrderCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<uint>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("VoucherUsage")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PSE.Order.Domain.Orders.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ProductImage")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("ValueUnit")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PSE.Order.Domain.Vouchers.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Activ")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUsage")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateValidity")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Usage")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("PSE.Order.Domain.Orders.OrderCustomer", b =>
                {
                    b.HasOne("PSE.Order.Domain.Vouchers.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.OwnsOne("PSE.Order.Domain.Orders.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("OrderCustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Complement")
                                .HasColumnName("Complement")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Neighborhoodty")
                                .HasColumnName("Neighborhoodty")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Number")
                                .HasColumnName("Number")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ZipCode")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("OrderCustomerId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderCustomerId");
                        });
                });

            modelBuilder.Entity("PSE.Order.Domain.Orders.OrderItem", b =>
                {
                    b.HasOne("PSE.Order.Domain.Orders.OrderCustomer", "OrderCustomer")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
